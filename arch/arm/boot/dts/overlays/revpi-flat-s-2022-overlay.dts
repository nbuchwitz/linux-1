/*
 * Device tree overlay for Revolution Pi by KUNBUS
 *
 * RevPi Flat S (2022)
 */

/dts-v1/;
/plugin/;
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/pinctrl/bcm2835.h>

/{
	compatible = "brcm,bcm2711";

	fragment@0 {
		target-path = "/";
		__overlay__ {
			compatible = "kunbus,revpi-flat-s-2022",
				     "kunbus,revpi-flat", "brcm,bcm2711";

			aout_vref: fixedregulator_2v5x4 {
				compatible = "regulator-fixed";
				regulator-name = "2v5_x4_amplified";
				regulator-min-microvolt = <10000000>;
				regulator-max-microvolt = <10000000>;
				regulator-always-on;
			};

			ain_vref: fixedregulator_2v5x5 {
				compatible = "regulator-fixed";
				regulator-name = "2v5_x5_amplified";
				regulator-min-microvolt = <12500000>;
				regulator-max-microvolt = <12500000>;
				regulator-always-on;
			};

			wlan_pwrseq: wlan_pwrseq {
				compatible = "mmc-pwrseq-sd8787";
				reset-gpios = <&expander 10 GPIO_ACTIVE_HIGH>;
				powerdown-gpios = <&expander 12 GPIO_ACTIVE_HIGH>;
			};

			leds {
				compatible = "gpio-leds";
				pinctrl-names = "default";
				pinctrl-0 = <&pwr_led_pins>;

				power_red {
					gpios = <&gpio 24 GPIO_ACTIVE_HIGH>;
					linux,default-trigger = "power_red";
				};
				a1_green {
					gpios = <&expander 0 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a1_green";
				};
				a1_red {
					gpios = <&expander 1 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a1_red";
				};
				a2_green {
					gpios = <&expander 2 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a2_green";
				};
				a2_red {
					gpios = <&expander 3 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a2_red";
				};
				a3_green {
					gpios = <&expander 4 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a3_green";
				};
				a3_red {
					gpios = <&expander 5 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a3_red";
				};
				a4_green {
					gpios = <&expander 6 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a4_green";
				};
				a4_red {
					gpios = <&expander 7 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a4_red";
				};
				a5_green {
					gpios = <&expander 8 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a5_green";
				};
				a5_red {
					gpios = <&expander 9 GPIO_ACTIVE_LOW>;
					linux,default-trigger = "a5_red";
				};
				led-act {
					status = "disabled";
				};
			};

			gpio-keys {
				compatible = "gpio-keys";
				pinctrl-names = "default";
				pinctrl-0 = <&button_pins>;
				user-event {
					label = "User event key";
					gpios = <&gpio 23 GPIO_ACTIVE_LOW>;
					linux,code = <KEY_UNKNOWN>;
				};
			};
		};
	};

	fragment@1 {
		target = <&gpio>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&relais_pins>;

			pwr_led_pins: pwr_led_pins {
				brcm,pins = <24>;
				brcm,function = <BCM2835_FSEL_GPIO_OUT>;
			};
			spi_5_pins: spi_5_pins {
				brcm,pins = <13 14 15>;
				brcm,function = <BCM2835_FSEL_ALT3>;
			};
			spi_5_cs_pins: spi_5_cs_pins {
				/* tpm ksz*/
				brcm,pins     = <17 18>;
				brcm,function = <BCM2835_FSEL_GPIO_OUT>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};
			spi_6_pins: spi_6_pins {
				brcm,pins = <19 20 21>;
				brcm,function = <BCM2835_FSEL_ALT3>;
			};
			spi_6_cs_pins: spi_6_cs_pins {
				/* aout ain mbus */
				brcm,pins     = <6 10 27>;
				brcm,function = <BCM2835_FSEL_GPIO_OUT>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};
			tpm_pins: tpm_pins {
				/* irq */
				brcm,pins     = <22>;
				brcm,function = <BCM2835_FSEL_GPIO_IN>;
				// TODO: ask HW about external pull up
				brcm,pull     = <BCM2835_PUD_UP>;
			};
			mbus_pins: mbus_pins {
				/* irq */
				brcm,pins     = <45>;
				brcm,function = <BCM2835_FSEL_GPIO_IN>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};
			button_pins: button_pins {
				brcm,pins     = <23>;
				brcm,function = <BCM2835_FSEL_GPIO_IN>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};
			relais_pins: relais_pins {
				brcm,pins     = <28>;
				brcm,function = <BCM2835_FSEL_GPIO_OUT>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};
			rs485_0_pins: rs485_0_pins {
				/* tx rx rts */
				brcm,pins     = <4 5 7>;
				brcm,function = <BCM2835_FSEL_ALT4>;
				// TODO: ask HW about external pulls
				brcm,pull     = <BCM2835_PUD_DOWN
						 BCM2835_PUD_OFF
						 BCM2835_PUD_UP>;
			};
			rs485_1_pins: rs485_1_pins {
				/* tx rx rts */
				brcm,pins     = <8 9 11>;
				brcm,function = <BCM2835_FSEL_ALT4>;
				// TODO: ask HW about external pulls
				brcm,pull     = <BCM2835_PUD_DOWN
						 BCM2835_PUD_OFF
						 BCM2835_PUD_UP>;
			};
			i2c_1_pins: i2c_1_pins {
				brcm,pins = <2 3>;
				brcm,function = <BCM2835_FSEL_ALT0>;
			};
			sdhci_pins: sdhci_pins {
				brcm,pins = <34 35 36 37 38 39>;
				brcm,function = <BCM2835_FSEL_ALT3>;
				brcm,pull = <BCM2835_PUD_OFF>;
			};
			bluetooth_pins: bluetooth_pins {
				brcm,pins = <30 31 32 33>;
				brcm,function = <BCM2835_FSEL_ALT3>;
				brcm,pull = <BCM2835_PUD_OFF>;
			};
			switch_irq_pins: test_pins {
				brcm,pins     = <44>;
				brcm,function = <BCM2835_FSEL_GPIO_IN>;
				brcm,pull     = <BCM2835_PUD_OFF>;
			};

		};
	};

	fragment@2 {
		target = <&i2c1>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			pinctrl-names = "default";
			pinctrl-0 = <&i2c_1_pins>;
			clock-frequency = <400000>;
			status = "okay";

			expander: gpio@20 {
				compatible = "ti,tca6416";
				reg = <0x20>;
				gpio-controller;
				#gpio-cells = <2>;
				status = "okay";
			};

			rtc@51 {
				compatible = "nxp,pcf2129";
				reg = <0x51>;
				reset-source;
				status = "okay";
			};
		};
	};

	fragment@3 {
		target = <&spi5>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			cs-gpios = <&gpio 17 GPIO_ACTIVE_LOW>,
				   <&gpio 18 GPIO_ACTIVE_LOW>;
			pinctrl-names = "default";
			pinctrl-0 = <&spi_5_pins &spi_5_cs_pins>;
			status = "okay";

			tpm: tpm@0 {
				compatible = "infineon,slb9670";
				pinctrl-names = "default";
				pinctrl-0 = <&tpm_pins>;
				reg = <0>;
				spi-max-frequency = <1000000>;
				interrupt-parent = <&gpio>;
				#interrupt-cells = <2>;
				interrupts = <22 IRQ_TYPE_LEVEL_LOW>;
				status = "okay";
			};

			ksz8795: switch@1 {
				compatible = "microchip,ksz8795";
				pinctrl-names = "default";
				pinctrl-0 = <&switch_irq_pins>;
				spi-max-frequency = <2000000>;
				reg = <1>;
				spi-cpha;
				spi-cpol;
				interrupt-parent = <&gpio>;
				#interrupt-cells = <2>;
				interrupts = <44 IRQ_TYPE_LEVEL_LOW>;
				status = "disabled";

				ports {
					#address-cells = <1>;
					#size-cells = <0>;
					/*
					 * Use the reverse port order for naming
					 * to have port swp1 physically next to
					 * eth0 on the RevPi Flat.
					 */
					port@1 {
						reg = <1>;
						label = "swp3";
					};
					port@2 {
						reg = <2>;
						label = "swp2";
					};
					port@3 {
						reg = <3>;
						label = "swp1";
					};
					port@4 {
						reg = <4>;
						label = "cpu";
						phy-mode = "rgmii";
						rx-internal-delay-ps = <2000>;
						tx-internal-delay-ps = <2000>;
						ethernet = <&eth1>;
						fixed-link {
							speed = <1000>;
							full-duplex;
						};
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&spi6>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			cs-gpios = <&gpio 6 GPIO_ACTIVE_LOW>,
				   <&gpio 10 GPIO_ACTIVE_LOW>,
				   <&gpio 27 GPIO_ACTIVE_LOW>;
			pinctrl-names = "default";
			pinctrl-0 = <&spi_6_pins &spi_6_cs_pins>;
			status = "okay";

			aout: dac@0 {
				compatible = "ti,dac7512";
				reg = <0>;
				spi-max-frequency = <20000000>;
				spi-cpol;
				vcc-supply = <&aout_vref>;
				status = "okay";
			};

			ain: adc@1 {
				compatible = "microchip,mcp3550-50";
				reg = <1>;
				spi-max-frequency = <5000000>;
				vref-supply = <&ain_vref>;
				status = "okay";
			};

			mbus: rf@2 {
				compatible = "spidev", "ti,cc1101";
				pinctrl-names = "default";
				pinctrl-0 = <&mbus_pins>;
				reg = <2>;
				spi-max-frequency = <5000000>;
				interrupt-parent = <&gpio>;
				#interrupt-cells = <2>;
				interrupts = <45 IRQ_TYPE_LEVEL_HIGH>;
				status = "okay";
			};
		};
	};

	fragment@5 {
		target = <&usb>;
		#address-cells = <1>;
		#size-cells = <1>;
		dwc2_usb: __overlay__ {
			compatible = "brcm,bcm2835-usb";
			dr_mode = "host";
			g-np-tx-fifo-size = <32>;
			g-rx-fifo-size = <558>;
			g-tx-fifo-size = <512 512 512 512 512 256 256>;
			status = "okay";

			hub@1 {
				/* SMSC LAN9514 */
				compatible = "usb424,9514";
				reg = <1>;
				#address-cells = <1>;
				#size-cells = <0>;

				eth0: ethernet@1 {
					compatible = "usb424,ec00";
					reg = <1>;
				};

				eth1: ethernet@4 {
					/* Microchip Technology LAN7801 attached to KSZ8795 */
					compatible = "usb424,7801";
					reg = <4>;
				};
			};
		};
	};

	fragment@6 {
		target = <&sdhci>;
		__overlay__ {
			#address-cells = <1>;
			#size-cells = <0>;
			pinctrl-names = "default";
			pinctrl-0 = <&sdhci_pins>;
			bus-width = <4>;
			non-removable;
			max-frequency = <28000000>;
			mmc-pwrseq = <&wlan_pwrseq>;
			status = "okay";

			wlan0: wifi@1 {
				compatible = "nxp,iw416";
				reg = <1>;
				status = "okay";
			};
		};
	};

	fragment@7 {
		target = <&uart0>;
		__overlay__ {
			pinctrl-names = "default";
			pinctrl-0 = <&bluetooth_pins>;
			status = "okay";
		};
	};

	fragment@8 {
		target = <&uart3>;
		__overlay__ {
			linux,rs485-enabled-at-boot-time;
			rs485-rts-active-low;
			pinctrl-names = "default";
			pinctrl-0 = <&rs485_0_pins>;
			rs485-term-gpios = <&expander 14 GPIO_ACTIVE_LOW>;
			status = "okay";
		};
	};

	fragment@9 {
		target = <&uart4>;
		__overlay__ {
			linux,rs485-enabled-at-boot-time;
			rs485-rts-active-low;
			pinctrl-names = "default";
			pinctrl-0 = <&rs485_1_pins>;
			rs485-term-gpios = <&expander 15 GPIO_ACTIVE_LOW>;
			status = "okay";
		};
	};

	fragment@10 {
		target = <&hdmi0>;
		__overlay__ {
			status = "disabled";
		};
	};

	fragment@11 {
		target = <&ddc0>;
		__overlay__ {
			status = "disabled";
		};
	};

	fragment@12 {
		target-path = "/chosen";
		chosen_overlay: __overlay__ {
		};
	};

	__overrides__ {
		bootargs = <&chosen_overlay>,"bootargs";
		dsa = <&ksz8795>,"status=okay";
	};
};
